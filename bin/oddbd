#!/usr/bin/env ruby
# OddbServer

$: << File.expand_path("../src", File.dirname(__FILE__))
$: << File.expand_path("..", File.dirname(__FILE__))

require 'fastthread'
require 'drb/drb'
require 'util/oddbapp'
require 'etc/db_connection'

File.open("/proc/#{Process.pid}/oom_adj", 'w') do |fh|
  fh.puts "15"
end

trap("USR1") { 
	puts "caught USR1 signal, clearing Sessions\n"
	$oddb.clear 
}
trap("USR2") { 
	puts "caught USR2 signal, flushing stdout...\n"
	$stdout.flush
}

module ODDB
	headpath = File.expand_path('../.git/ORIG_HEAD', File.dirname(__FILE__))
	ODDB_VERSION = File.read(headpath)

  Currency = DRbObject.new(nil, ODDB::CURRENCY_URI)
end

ODBA.cache.setup
ODBA.cache.clean_prefetched

$oddb = ODDB::App.new

$0 = "Oddb (OddbApp)"

DRb.install_id_conv ODBA::DRbIdConv.new
DRb.start_service(ODDB::SERVER_URI, $oddb)

DRb.thread.join
