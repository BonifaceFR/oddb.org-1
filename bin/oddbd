#!/usr/bin/env ruby
# OddbServer

$: << File.expand_path("../src", File.dirname(__FILE__))
$: << File.expand_path("..", File.dirname(__FILE__))

require 'drb/drb'
require 'util/currency'
require 'util/oddbapp'
require 'etc/db_connection'

File.open("/proc/#{Process.pid}/oom_adj", 'w') do |fh|
  fh.puts "15"
end

trap("USR1") { 
	puts "caught USR1 signal, clearing Sessions\n"
	$oddb.clear 
}
trap("USR2") { 
	puts "caught USR2 signal, flushing stdout...\n"
	$stdout.flush
}

ODBA.cache.setup
ODBA.cache.clean_prefetched

if (opt = ARGV.first and opt == 'crawler')
  server_uri = ODDB::SERVER_URI_FOR_CRAWLER
  $0 = "Oddb (OddbApp:Crawler)"
else
  server_uri = ODDB::SERVER_URI
  $0 = "Oddb (OddbApp)"
end
$oddb = ODDB::App.new({:server_uri => server_uri})

DRb.install_id_conv ODBA::DRbIdConv.new
DRb.start_service(server_uri, $oddb)

DRb.thread.join
